"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsonexport";
exports.ids = ["vendor-chunks/jsonexport"];
exports.modules = {

/***/ "(ssr)/./node_modules/jsonexport/dist/core/eol.js":
/*!**************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/eol.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n  \n\n  module.exports = \"\\n\";\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZW9sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBZTs7QUFFZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHVvbGluZ28tY2xvbmUvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZW9sLmpzPzlkMGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoganNoaW50IG5vZGU6dHJ1ZSAqL1xuICAndXNlIHN0cmljdCc7XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBcIlxcblwiO1xuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/eol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/escape-delimiters.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\n\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n\n    return value;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZXNjYXBlLWRlbGltaXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHVvbGluZ28tY2xvbmUvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZXNjYXBlLWRlbGltaXRlcnMuanM/NzBkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgbm9kZTp0cnVlICovXG4ndXNlIHN0cmljdCc7XG5cbi8vIEVzY2FwZSB0aGUgdGV4dERlbGltaXRlcnMgY29udGFpbmVkIGluIHRoZSBmaWVsZFxuLyooaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQxODApXG4gICA3LiAgSWYgZG91YmxlLXF1b3RlcyBhcmUgdXNlZCB0byBlbmNsb3NlIGZpZWxkcywgdGhlbiBhIGRvdWJsZS1xdW90ZVxuICAgYXBwZWFyaW5nIGluc2lkZSBhIGZpZWxkIG11c3QgYmUgZXNjYXBlZCBieSBwcmVjZWRpbmcgaXQgd2l0aFxuICAgYW5vdGhlciBkb3VibGUgcXVvdGUuXG4gICBGb3IgZXhhbXBsZTogXCJhYWFcIixcImJcIlwiYmJcIixcImNjY1wiXG4qL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZWREZWxpbWl0ZXJzKHRleHREZWxpbWl0ZXIsIHJvd0RlbGltaXRlciwgZm9yY2VUZXh0RGVsaW1pdGVyKSB7XG4gIHZhciBlbmRPZkxpbmUgPSAnXFxuJztcblxuICBpZiAodHlwZW9mIHRleHREZWxpbWl0ZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBwYXJhbSBcInRleHREZWxpbWl0ZXJcIiwgbXVzdCBiZSBhIHN0cmluZy4nKTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygcm93RGVsaW1pdGVyICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgcGFyYW0gXCJyb3dEZWxpbWl0ZXJcIiwgbXVzdCBiZSBhIHN0cmluZy4nKTtcbiAgfVxuXG4gIHZhciB0ZXh0RGVsaW1pdGVyUmVnZXggPSBuZXcgUmVnRXhwKFwiXFxcXFwiICsgdGV4dERlbGltaXRlciwgJ2cnKTtcbiAgdmFyIGVzY2FwZWREZWxpbWl0ZXIgPSB0ZXh0RGVsaW1pdGVyICsgdGV4dERlbGltaXRlcjtcblxuICB2YXIgZW5jbG9zaW5nQ29uZGl0aW9uID0gdGV4dERlbGltaXRlciA9PT0gJ1wiJyA/IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5pbmRleE9mKHJvd0RlbGltaXRlcikgPj0gMCB8fCB2YWx1ZS5pbmRleE9mKGVuZE9mTGluZSkgPj0gMCB8fCB2YWx1ZS5pbmRleE9mKCdcIicpID49IDA7XG4gIH0gOiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUuaW5kZXhPZihyb3dEZWxpbWl0ZXIpID49IDAgfHwgdmFsdWUuaW5kZXhPZihlbmRPZkxpbmUpID49IDA7XG4gIH07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIGlmIChmb3JjZVRleHREZWxpbWl0ZXIpIHZhbHVlID0gXCJcIiArIHZhbHVlO1xuXG4gICAgaWYgKCF2YWx1ZS5yZXBsYWNlKSByZXR1cm4gdmFsdWU7XG4gICAgLy8gRXNjYXBlIHRoZSB0ZXh0RGVsaW1pdGVycyBjb250YWluZWQgaW4gdGhlIGZpZWxkXG4gICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKHRleHREZWxpbWl0ZXJSZWdleCwgZXNjYXBlZERlbGltaXRlcik7XG5cbiAgICAvLyBFc2NhcGUgdGhlIHdob2xlIGZpZWxkIGlmIGl0IGNvbnRhaW5zIGEgcm93RGVsaW1pdGVyIG9yIGEgbGluZWJyZWFrIG9yIGRvdWJsZSBxdW90ZVxuICAgIGlmIChmb3JjZVRleHREZWxpbWl0ZXIgfHwgZW5jbG9zaW5nQ29uZGl0aW9uKHZhbHVlKSkge1xuICAgICAgdmFsdWUgPSB0ZXh0RGVsaW1pdGVyICsgdmFsdWUgKyB0ZXh0RGVsaW1pdGVyO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/helper.js":
/*!*****************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/helper.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports.isFunction = function (fn) {\n    var getType = {};\n    return fn && getType.toString.call(fn) === '[object Function]';\n};\n\nmodule.exports.isArray = function (arr) {\n    return Array.isArray(arr);\n};\n\nmodule.exports.isObject = function (obj) {\n    return obj instanceof Object;\n};\n\nmodule.exports.isString = function (str) {\n    return typeof str === 'string';\n};\n\nmodule.exports.isNumber = function (num) {\n    return typeof num === 'number';\n};\n\nmodule.exports.isBoolean = function (bool) {\n    return typeof bool === 'boolean';\n};\n\nmodule.exports.isDate = function (date) {\n    return date instanceof Date;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvaGVscGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kdW9saW5nby1jbG9uZS8uL25vZGVfbW9kdWxlcy9qc29uZXhwb3J0L2Rpc3QvY29yZS9oZWxwZXIuanM/ZDhiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzLmlzRnVuY3Rpb24gPSBmdW5jdGlvbiAoZm4pIHtcbiAgICB2YXIgZ2V0VHlwZSA9IHt9O1xuICAgIHJldHVybiBmbiAmJiBnZXRUeXBlLnRvU3RyaW5nLmNhbGwoZm4pID09PSAnW29iamVjdCBGdW5jdGlvbl0nO1xufTtcblxubW9kdWxlLmV4cG9ydHMuaXNBcnJheSA9IGZ1bmN0aW9uIChhcnIpIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpO1xufTtcblxubW9kdWxlLmV4cG9ydHMuaXNPYmplY3QgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIE9iamVjdDtcbn07XG5cbm1vZHVsZS5leHBvcnRzLmlzU3RyaW5nID0gZnVuY3Rpb24gKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJztcbn07XG5cbm1vZHVsZS5leHBvcnRzLmlzTnVtYmVyID0gZnVuY3Rpb24gKG51bSkge1xuICAgIHJldHVybiB0eXBlb2YgbnVtID09PSAnbnVtYmVyJztcbn07XG5cbm1vZHVsZS5leHBvcnRzLmlzQm9vbGVhbiA9IGZ1bmN0aW9uIChib29sKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBib29sID09PSAnYm9vbGVhbic7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5pc0RhdGUgPSBmdW5jdGlvbiAoZGF0ZSkge1xuICAgIHJldHVybiBkYXRlIGluc3RhbmNlb2YgRGF0ZTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/helper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/join-rows.js":
/*!********************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/join-rows.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar EOL = __webpack_require__(/*! ./eol */ \"(ssr)/./node_modules/jsonexport/dist/core/eol.js\");\nvar helper = __webpack_require__(/*! ./helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nmodule.exports = function joinRows(rows, join) {\n  if (!rows || !helper.isArray(rows)) {\n    throw new TypeError('Invalid params \"rows\" for joinRows.' + ' Must be an array of string.');\n  }\n  //Merge all rows in a single output with the correct End of Line string\n  var r = rows.join(join || EOL || '\\n');\n  return r;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvam9pbi1yb3dzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFVBQVUsbUJBQU8sQ0FBQywrREFBTztBQUN6QixhQUFhLG1CQUFPLENBQUMscUVBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kdW9saW5nby1jbG9uZS8uL25vZGVfbW9kdWxlcy9qc29uZXhwb3J0L2Rpc3QvY29yZS9qb2luLXJvd3MuanM/ODQ3NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBFT0wgPSByZXF1aXJlKCcuL2VvbCcpO1xudmFyIGhlbHBlciA9IHJlcXVpcmUoJy4vaGVscGVyJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gam9pblJvd3Mocm93cywgam9pbikge1xuICBpZiAoIXJvd3MgfHwgIWhlbHBlci5pc0FycmF5KHJvd3MpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBwYXJhbXMgXCJyb3dzXCIgZm9yIGpvaW5Sb3dzLicgKyAnIE11c3QgYmUgYW4gYXJyYXkgb2Ygc3RyaW5nLicpO1xuICB9XG4gIC8vTWVyZ2UgYWxsIHJvd3MgaW4gYSBzaW5nbGUgb3V0cHV0IHdpdGggdGhlIGNvcnJlY3QgRW5kIG9mIExpbmUgc3RyaW5nXG4gIHZhciByID0gcm93cy5qb2luKGpvaW4gfHwgRU9MIHx8ICdcXG4nKTtcbiAgcmV0dXJuIHI7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/join-rows.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/stream.js":
/*!*****************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/stream.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n  \n\n  var Stream = function (_Transform) {\n    throw new Error(\"jsonexport called without third argument as a callback and is required\")\n  }\n\n  module.exports = Stream;\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvc3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBZTs7QUFFZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2R1b2xpbmdvLWNsb25lLy4vbm9kZV9tb2R1bGVzL2pzb25leHBvcnQvZGlzdC9jb3JlL3N0cmVhbS5qcz84ODg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGpzaGludCBub2RlOnRydWUgKi9cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciBTdHJlYW0gPSBmdW5jdGlvbiAoX1RyYW5zZm9ybSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImpzb25leHBvcnQgY2FsbGVkIHdpdGhvdXQgdGhpcmQgYXJndW1lbnQgYXMgYSBjYWxsYmFjayBhbmQgaXMgcmVxdWlyZWRcIilcbiAgfVxuXG4gIG1vZHVsZS5leHBvcnRzID0gU3RyZWFtO1xuICAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/jsonexport/dist/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n/**\n * Module dependencies.\n */\n//const _ = require('underscore');\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Parser = __webpack_require__(/*! ./parser/csv */ \"(ssr)/./node_modules/jsonexport/dist/parser/csv.js\");\nvar Stream = __webpack_require__(/*! ./core/stream */ \"(ssr)/./node_modules/jsonexport/dist/core/stream.js\");\nvar helper = __webpack_require__(/*! ./core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\nvar EOL = __webpack_require__(/*! ./core/eol */ \"(ssr)/./node_modules/jsonexport/dist/core/eol.js\");\n\n/**\n * Main function that converts json to csv\n *\n * @param {Object|Array} json\n * @param {Object} [options]\n * @param {Function} callback(err, csv) - Callback function\n *      if error, returning error in call back.\n *      if csv is created successfully, returning csv output to callback.\n */\nmodule.exports = function () {\n  var DEFAULT_OPTIONS = {\n    headers: [], //              Array\n    rename: [], //               Array\n    headerPathString: '.', //    String\n    rowDelimiter: ',', //        String\n    textDelimiter: '\"', //       String\n    arrayPathString: ';', //     String\n    undefinedString: '', //      String\n    endOfLine: EOL || '\\n', //   String\n    mainPathItem: null, //       String\n    booleanTrueString: null, //  String\n    booleanFalseString: null, // String\n    includeHeaders: true, //     Boolean\n    fillGaps: false, //          Boolean\n    verticalOutput: true, //     Boolean\n    forceTextDelimiter: false //Boolean\n  };\n  // argument parsing\n  var json = void 0,\n      userOptions = void 0,\n      callback = void 0;\n  if (arguments.length === 3) {\n    var _arguments = Array.prototype.slice.call(arguments);\n\n    json = _arguments[0];\n    userOptions = _arguments[1];\n    callback = _arguments[2];\n  } else if (arguments.length === 2) {\n    var any = void 0;\n\n    var _arguments2 = Array.prototype.slice.call(arguments);\n\n    json = _arguments2[0];\n    any = _arguments2[1];\n\n    if (typeof any === 'function') {\n      callback = any;\n    } else if ((typeof any === 'undefined' ? 'undefined' : _typeof(any)) === 'object') {\n      userOptions = any;\n    }\n  } else if (arguments.length === 1) {\n    var _arguments3 = Array.prototype.slice.call(arguments),\n        _any = _arguments3[0];\n\n    if ((typeof _any === 'undefined' ? 'undefined' : _typeof(_any)) === 'object') {\n      var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n      var objectKeys = Object.keys(_any);\n      var isOptions = objectKeys.every(function (key) {\n        return defaultKeys.includes(key);\n      });\n      if (objectKeys.length > 0 && isOptions) {\n        userOptions = _any;\n      } else {\n        json = _any;\n      }\n    } else {\n      json = _any;\n    }\n  } else {\n    return new Stream(new Parser(DEFAULT_OPTIONS));\n  }\n  var options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  var parser = new Parser(options);\n  // if no json is provided Stream API will be used\n  if (!json) {\n    return new Stream(parser);\n  }\n  // always return an promise\n  return new Promise(function (resolve, reject) {\n    parser.parse(json, function (err, result) {\n      if (callback) return callback(err, result);\n      if (err) return reject(err);\n      if (reject) return resolve(result);\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxR0FBcUcscUJBQXFCLG1CQUFtQjs7QUFFN0ksYUFBYSxtQkFBTyxDQUFDLHdFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQywwRUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsMEVBQWU7QUFDcEMsVUFBVSxtQkFBTyxDQUFDLG9FQUFZOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kdW9saW5nby1jbG9uZS8uL25vZGVfbW9kdWxlcy9qc29uZXhwb3J0L2Rpc3QvaW5kZXguanM/MjcwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgbm9kZTp0cnVlICovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKi9cbi8vY29uc3QgXyA9IHJlcXVpcmUoJ3VuZGVyc2NvcmUnKTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgUGFyc2VyID0gcmVxdWlyZSgnLi9wYXJzZXIvY3N2Jyk7XG52YXIgU3RyZWFtID0gcmVxdWlyZSgnLi9jb3JlL3N0cmVhbScpO1xudmFyIGhlbHBlciA9IHJlcXVpcmUoJy4vY29yZS9oZWxwZXInKTtcbnZhciBFT0wgPSByZXF1aXJlKCcuL2NvcmUvZW9sJyk7XG5cbi8qKlxuICogTWFpbiBmdW5jdGlvbiB0aGF0IGNvbnZlcnRzIGpzb24gdG8gY3N2XG4gKlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IGpzb25cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrKGVyciwgY3N2KSAtIENhbGxiYWNrIGZ1bmN0aW9uXG4gKiAgICAgIGlmIGVycm9yLCByZXR1cm5pbmcgZXJyb3IgaW4gY2FsbCBiYWNrLlxuICogICAgICBpZiBjc3YgaXMgY3JlYXRlZCBzdWNjZXNzZnVsbHksIHJldHVybmluZyBjc3Ygb3V0cHV0IHRvIGNhbGxiYWNrLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIERFRkFVTFRfT1BUSU9OUyA9IHtcbiAgICBoZWFkZXJzOiBbXSwgLy8gICAgICAgICAgICAgIEFycmF5XG4gICAgcmVuYW1lOiBbXSwgLy8gICAgICAgICAgICAgICBBcnJheVxuICAgIGhlYWRlclBhdGhTdHJpbmc6ICcuJywgLy8gICAgU3RyaW5nXG4gICAgcm93RGVsaW1pdGVyOiAnLCcsIC8vICAgICAgICBTdHJpbmdcbiAgICB0ZXh0RGVsaW1pdGVyOiAnXCInLCAvLyAgICAgICBTdHJpbmdcbiAgICBhcnJheVBhdGhTdHJpbmc6ICc7JywgLy8gICAgIFN0cmluZ1xuICAgIHVuZGVmaW5lZFN0cmluZzogJycsIC8vICAgICAgU3RyaW5nXG4gICAgZW5kT2ZMaW5lOiBFT0wgfHwgJ1xcbicsIC8vICAgU3RyaW5nXG4gICAgbWFpblBhdGhJdGVtOiBudWxsLCAvLyAgICAgICBTdHJpbmdcbiAgICBib29sZWFuVHJ1ZVN0cmluZzogbnVsbCwgLy8gIFN0cmluZ1xuICAgIGJvb2xlYW5GYWxzZVN0cmluZzogbnVsbCwgLy8gU3RyaW5nXG4gICAgaW5jbHVkZUhlYWRlcnM6IHRydWUsIC8vICAgICBCb29sZWFuXG4gICAgZmlsbEdhcHM6IGZhbHNlLCAvLyAgICAgICAgICBCb29sZWFuXG4gICAgdmVydGljYWxPdXRwdXQ6IHRydWUsIC8vICAgICBCb29sZWFuXG4gICAgZm9yY2VUZXh0RGVsaW1pdGVyOiBmYWxzZSAvL0Jvb2xlYW5cbiAgfTtcbiAgLy8gYXJndW1lbnQgcGFyc2luZ1xuICB2YXIganNvbiA9IHZvaWQgMCxcbiAgICAgIHVzZXJPcHRpb25zID0gdm9pZCAwLFxuICAgICAgY2FsbGJhY2sgPSB2b2lkIDA7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAzKSB7XG4gICAgdmFyIF9hcmd1bWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuXG4gICAganNvbiA9IF9hcmd1bWVudHNbMF07XG4gICAgdXNlck9wdGlvbnMgPSBfYXJndW1lbnRzWzFdO1xuICAgIGNhbGxiYWNrID0gX2FyZ3VtZW50c1syXTtcbiAgfSBlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgdmFyIGFueSA9IHZvaWQgMDtcblxuICAgIHZhciBfYXJndW1lbnRzMiA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICBqc29uID0gX2FyZ3VtZW50czJbMF07XG4gICAgYW55ID0gX2FyZ3VtZW50czJbMV07XG5cbiAgICBpZiAodHlwZW9mIGFueSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgY2FsbGJhY2sgPSBhbnk7XG4gICAgfSBlbHNlIGlmICgodHlwZW9mIGFueSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoYW55KSkgPT09ICdvYmplY3QnKSB7XG4gICAgICB1c2VyT3B0aW9ucyA9IGFueTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIHZhciBfYXJndW1lbnRzMyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyksXG4gICAgICAgIF9hbnkgPSBfYXJndW1lbnRzM1swXTtcblxuICAgIGlmICgodHlwZW9mIF9hbnkgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKF9hbnkpKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHZhciBkZWZhdWx0S2V5cyA9IE9iamVjdC5rZXlzKERFRkFVTFRfT1BUSU9OUyk7XG4gICAgICB2YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzKF9hbnkpO1xuICAgICAgdmFyIGlzT3B0aW9ucyA9IG9iamVjdEtleXMuZXZlcnkoZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gZGVmYXVsdEtleXMuaW5jbHVkZXMoa2V5KTtcbiAgICAgIH0pO1xuICAgICAgaWYgKG9iamVjdEtleXMubGVuZ3RoID4gMCAmJiBpc09wdGlvbnMpIHtcbiAgICAgICAgdXNlck9wdGlvbnMgPSBfYW55O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAganNvbiA9IF9hbnk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGpzb24gPSBfYW55O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IFN0cmVhbShuZXcgUGFyc2VyKERFRkFVTFRfT1BUSU9OUykpO1xuICB9XG4gIHZhciBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9PUFRJT05TLCB1c2VyT3B0aW9ucyk7XG4gIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKG9wdGlvbnMpO1xuICAvLyBpZiBubyBqc29uIGlzIHByb3ZpZGVkIFN0cmVhbSBBUEkgd2lsbCBiZSB1c2VkXG4gIGlmICghanNvbikge1xuICAgIHJldHVybiBuZXcgU3RyZWFtKHBhcnNlcik7XG4gIH1cbiAgLy8gYWx3YXlzIHJldHVybiBhbiBwcm9taXNlXG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgcGFyc2VyLnBhcnNlKGpzb24sIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgaWYgKGNhbGxiYWNrKSByZXR1cm4gY2FsbGJhY2soZXJyLCByZXN1bHQpO1xuICAgICAgaWYgKGVycikgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgaWYgKHJlamVjdCkgcmV0dXJuIHJlc29sdmUocmVzdWx0KTtcbiAgICB9KTtcbiAgfSk7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/parser/csv.js":
/*!****************************************************!*\
  !*** ./node_modules/jsonexport/dist/parser/csv.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n\n/**\n * Module dependencies.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar joinRows = __webpack_require__(/*! ../core/join-rows */ \"(ssr)/./node_modules/jsonexport/dist/core/join-rows.js\");\nvar Handler = __webpack_require__(/*! ./handler */ \"(ssr)/./node_modules/jsonexport/dist/parser/handler.js\");\nvar helper = __webpack_require__(/*! ../core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nvar Parser = function () {\n  function Parser(options) {\n    _classCallCheck(this, Parser);\n\n    this._options = options || {};\n    this._handler = new Handler(this._options);\n    this._headers = this._options.headers || [];\n    this._escape = __webpack_require__(/*! ../core/escape-delimiters */ \"(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js\")(this._options.textDelimiter, this._options.rowDelimiter, this._options.forceTextDelimiter);\n  }\n\n  /**\n   * Generates a CSV file with optional headers based on the passed JSON,\n   * with can be an Object or Array.\n   *\n   * @param {Object|Array} json\n   * @param {Function} done(err,csv) - Callback function\n   *      if error, returning error in call back.\n   *      if csv is created successfully, returning csv output to callback.\n   */\n\n\n  _createClass(Parser, [{\n    key: 'parse',\n    value: function parse(json, done, stream) {\n      if (helper.isArray(json)) return done(null, this._parseArray(json, stream));else if (helper.isObject(json)) return done(null, this._parseObject(json));\n      return done(new Error('Unable to parse the JSON object, its not an Array or Object.'));\n    }\n  }, {\n    key: '_checkRows',\n    value: function _checkRows(rows) {\n      var lastRow = null;\n      var finalRows = [];\n      var fillGaps = function fillGaps(col, index) {\n        return col === '' || col === undefined ? lastRow[index] : col;\n      };\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n\n          var missing = this._headers.length - row.length;\n          if (missing > 0) row = row.concat(Array(missing).join(\".\").split(\".\"));\n          if (lastRow && this._options.fillGaps) row = row.map(fillGaps);\n          finalRows.push(row.join(this._options.rowDelimiter));\n          lastRow = row;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return finalRows;\n    }\n  }, {\n    key: '_parseArray',\n    value: function _parseArray(json, stream) {\n      var self = this;\n      this._headers = this._headers || [];\n      var fileRows = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n\n      var getHeaderIndex = function getHeaderIndex(header) {\n        var index = self._headers.indexOf(header);\n        if (index === -1) {\n          self._headers.push(header);\n          index = self._headers.indexOf(header);\n        }\n        return index;\n      };\n\n      //Generate the csv output\n      fillRows = function fillRows(result) {\n        var rows = [];\n        var fillAndPush = function fillAndPush(row) {\n          return rows.push(row.map(function (col) {\n            return col != null ? col : '';\n          }));\n        };\n        // initialize the array with empty strings to handle 'unpopular' headers\n        var newRow = function newRow() {\n          return new Array(self._headers.length).fill(null);\n        };\n        var emptyRowIndexByHeader = {};\n        var currentRow = newRow();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = result[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var element = _step2.value;\n\n            var elementHeaderIndex = getHeaderIndex(element.item);\n            if (currentRow[elementHeaderIndex] != undefined) {\n              fillAndPush(currentRow);\n              currentRow = newRow();\n            }\n            emptyRowIndexByHeader[elementHeaderIndex] = emptyRowIndexByHeader[elementHeaderIndex] || 0;\n            // make sure there isn't a empty row for this header\n            if (self._options.fillTopRow && emptyRowIndexByHeader[elementHeaderIndex] < rows.length) {\n              rows[emptyRowIndexByHeader[elementHeaderIndex]][elementHeaderIndex] = self._escape(element.value);\n              emptyRowIndexByHeader[elementHeaderIndex] += 1;\n              continue;\n            }\n            currentRow[elementHeaderIndex] = self._escape(element.value);\n            emptyRowIndexByHeader[elementHeaderIndex] += 1;\n          }\n          // push last row\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (currentRow.length > 0) {\n          fillAndPush(currentRow);\n        }\n        fileRows = fileRows.concat(self._checkRows(rows));\n      };\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = json[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          //Call checkType to list all items inside this object\n          //Items are returned as a object {item: 'Prop Value, Item Name', value: 'Prop Data Value'}\n          var itemResult = self._handler.check(item, self._options.mainPathItem, item, json);\n          fillRows(itemResult);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (!stream && self._options.includeHeaders) {\n        //Add the headers to the first line\n        fileRows.unshift(this.headers);\n      }\n\n      return joinRows(fileRows, self._options.endOfLine);\n    }\n  }, {\n    key: '_parseObject',\n    value: function _parseObject(json) {\n      var self = this;\n      var fileRows = [];\n      var parseResult = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n      var horizontalRows = [[], []];\n\n      fillRows = function fillRows(result) {\n        var value = result.value || result.value === 0 ? result.value.toString() : self._options.undefinedString;\n        value = self._escape(value);\n\n        //Type header;value\n        if (self._options.verticalOutput) {\n          var row = [result.item, value];\n          fileRows.push(row.join(self._options.rowDelimiter));\n        } else {\n          horizontalRows[0].push(result.item);\n          horizontalRows[1].push(value);\n        }\n      };\n      for (var prop in json) {\n        var prefix = \"\";\n        if (this._options.mainPathItem) prefix = this._options.mainPathItem + this._options.headerPathString;\n        parseResult = this._handler.check(json[prop], prefix + prop, prop, json);\n\n        parseResult.forEach(fillRows);\n      }\n      if (!this._options.verticalOutput) {\n        fileRows.push(horizontalRows[0].join(this._options.rowDelimiter));\n        fileRows.push(horizontalRows[1].join(this._options.rowDelimiter));\n      }\n      return joinRows(fileRows, this._options.endOfLine);\n    }\n  }, {\n    key: 'headers',\n    get: function get() {\n      var _this = this;\n\n      var headers = this._headers;\n\n      if (this._options.rename && this._options.rename.length > 0) headers = headers.map(function (header) {\n        return _this._options.rename[_this._options.headers.indexOf(header)] || header;\n      });\n\n      if (this._options.forceTextDelimiter) {\n        headers = headers.map(function (header) {\n          return '' + _this._options.textDelimiter + header + _this._options.textDelimiter;\n        });\n      }\n\n      if (this._options.mapHeaders) headers = headers.map(this._options.mapHeaders);\n\n      return headers.join(this._options.rowDelimiter);\n    }\n  }]);\n\n  return Parser;\n}();\n\nmodule.exports = Parser;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/parser/csv.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/parser/handler.js":
/*!********************************************************!*\
  !*** ./node_modules/jsonexport/dist/parser/handler.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar helper = __webpack_require__(/*! ../core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nvar Handler = function () {\n  function Handler(options) {\n    _classCallCheck(this, Handler);\n\n    this._options = options;\n\n    // an object of {typeName:(value,index,parent)=>any}\n    this._options.typeHandlers = this._options.typeHandlers || {};\n  }\n\n  /**\n   * Check if results needing mapping to alternate value\n   *\n   * @returns [{item, value}] result\n   */\n\n\n  _createClass(Handler, [{\n    key: '_setHeaders',\n    value: function _setHeaders(result, item) {\n      var self = this;\n      if (!item) return result;\n      return result.map(function (element) {\n        element.item = element.item ? item + self._options.headerPathString + element.item : item;\n        return element;\n      });\n    }\n  }, {\n    key: 'castValue',\n    value: function castValue(element, item, index, parent) {\n      //cast by matching constructor\n      var types = this._options.typeHandlers;\n      for (var type in types) {\n        if (isInstanceOfTypeName(element, type)) {\n          element = types[type].call(types, element, index, parent);\n          break; //first match we move on\n        }\n      }\n\n      return element;\n    }\n  }, {\n    key: 'checkComplex',\n    value: function checkComplex(element, item) {\n      //Check if element is a Date\n      if (helper.isDate(element)) {\n        return [{\n          item: item,\n          value: (this._options.handleDate || this._handleDate)(element, item)\n        }];\n      }\n      //Check if element is an Array\n      else if (helper.isArray(element)) {\n          var resultArray = this._handleArray(element, item);\n          return this._setHeaders(resultArray, item);\n        }\n        //Check if element is a Object\n        else if (helper.isObject(element)) {\n            var resultObject = this._handleObject(element);\n            return this._setHeaders(resultObject, item);\n          }\n\n      return [{\n        item: item,\n        value: ''\n      }];\n    }\n\n    /**\n     * Check the element type of the element call the correct handle function\n     *\n     * @param element Element that will be checked\n     * @param item Used to make the headers/path breadcrumb\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: 'check',\n    value: function check(element, item, index, parent) {\n      element = this.castValue(element, item, index, parent);\n      // try simple value by highier performance switch\n      switch (typeof element === 'undefined' ? 'undefined' : _typeof(element)) {\n        case 'string':\n          return [{\n            item: item,\n            value: this._handleString(element, item)\n          }];\n\n        case 'number':\n          return [{\n            item: item,\n            value: this._handleNumber(element, item)\n          }];\n\n        case 'boolean':\n          return [{\n            item: item,\n            value: this._handleBoolean.bind(this)(element, item)\n          }];\n      }\n\n      return this.checkComplex(element, item);\n    }\n\n    /**\n     * Handle all Objects\n     *\n     * @param {Object} obj\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: '_handleObject',\n    value: function _handleObject(obj) {\n      var result = [];\n      //Look every object props\n      for (var prop in obj) {\n        var propData = obj[prop];\n        //Check the propData type\n        var resultCheckType = this.check(propData, prop, prop, obj);\n        //Append to results aka merge results aka array-append-array\n        result = result.concat(resultCheckType);\n      }\n      return result;\n    }\n\n    /**\n     * Handle all Arrays, merges arrays with primitive types in a single value\n     *\n     * @param {Array} array\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: '_handleArray',\n    value: function _handleArray(array) {\n      var self = this;\n      var result = [];\n      var firstElementWithoutItem;\n      for (var aIndex = 0; aIndex < array.length; ++aIndex) {\n        var element = array[aIndex];\n        //Check the propData type\n        var resultCheckType = self.check(element, null, aIndex, array);\n        //Check for results without itens, merge all itens with the first occurrence\n        if (resultCheckType.length === 0) continue;\n        var firstResult = resultCheckType[0];\n        if (!firstResult.item && firstElementWithoutItem !== undefined) {\n          firstElementWithoutItem.value += self._options.arrayPathString + firstResult.value;\n          continue;\n        } else if (resultCheckType.length > 0 && !firstResult.item && firstElementWithoutItem === undefined) {\n          firstElementWithoutItem = firstResult;\n        }\n        //Append to results\n        result = result.concat(resultCheckType);\n      }\n      return result;\n    }\n    /**\n     * Handle all Boolean variables, can be replaced with options.handleBoolean\n     *\n     * @param {Boolean} boolean\n     * @returns {String} result\n     */\n\n  }, {\n    key: '_handleBoolean',\n    value: function _handleBoolean(boolean) {\n      var result;\n      //Check for booolean options\n      if (boolean) {\n        result = this._options.booleanTrueString || 'true';\n      } else {\n        result = this._options.booleanFalseString || 'false';\n      }\n      return result;\n    }\n    /**\n     * Handle all String variables, can be replaced with options.handleString\n     *\n     * @param {String} string\n     * @returns {String} string\n     */\n\n  }, {\n    key: '_handleString',\n    value: function _handleString(string) {\n      return string;\n    }\n    /**\n     * Handle all Number variables, can be replaced with options.handleNumber\n     *\n     * @param {Number} number\n     * @returns {Number} number\n     */\n\n  }, {\n    key: '_handleNumber',\n    value: function _handleNumber(number) {\n      return number;\n    }\n    /**\n     * Handle all Date variables, can be replaced with options.handleDate\n     *\n     * @param {Date} number\n     * @returns {string} result\n     */\n\n  }, {\n    key: '_handleDate',\n    value: function _handleDate(date) {\n      return date.toLocaleDateString();\n    }\n  }]);\n\n  return Handler;\n}();\n\nmodule.exports = Handler;\n\nvar globalScope = typeof window === \"undefined\" ? global : window;\nfunction isInstanceOfTypeName(element, typeName) {\n  if (element instanceof globalScope[typeName]) {\n    return true; //Buffer and complex objects\n  }\n\n  //literals in javascript cannot be checked by instance of\n  switch (typeof element === 'undefined' ? 'undefined' : _typeof(element)) {\n    case 'string':\n      return typeName === \"String\";\n    case 'boolean':\n      return typeName === \"Boolean\";\n    case 'number':\n      return typeName === \"Number\";\n  }\n\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/parser/handler.js\n");

/***/ })

};
;